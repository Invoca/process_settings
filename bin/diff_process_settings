#!/usr/bin/env ruby
# frozen_string_literal: true

# Diffs two combined_process_settings.yml files. Skips over the meta-data (version) at the END.
# A filename of - means STDIN.

require 'fileutils'
require 'optparse'
require 'ostruct'
require 'tempfile'

PROGRAM_NAME = File.basename($PROGRAM_NAME)

def parse_options(argv)
  options = OpenStruct.new
  options.silent = false
  option_parser = OptionParser.new(argv) do |opt|
    opt.on('-s', '--silent', 'Silent mode.') { options.silent = true }
  end

  if option_parser.parse! && argv.size == 2
    [options, argv]
  else
    warn "usage: #{PROGRAM_NAME} [--silent] <path-to-combined_process_settings-A.yml> <path-to-combined_process_settings-B.yml>"
    option_parser.summarize(STDERR)
    exit(1)
  end
end

options, file_args = parse_options(ARGV)

input_files =
    file_args.map do |path|
      if path == '-'
        ''
      else
        unless File.exists?(path)
          warn "#{path} not found--must be a path to combined_process_settings.yml"
          exit 1
        end
        "< #{path}"
      end
    end

tempfile_a = Tempfile.new(['combined_process_settings', '.yml'], 'tmp').path
tempfile_b = Tempfile.new(['combined_process_settings', '.yml'], 'tmp').path

system("rm -f #{tempfile_a} #{tempfile_b}")

# remove the meta-data from the end
system("sed '/^- meta:$/,$d' #{input_files[0]} > #{tempfile_a}")
system("sed '/^- meta:$/,$d' #{input_files[1]} > #{tempfile_b}")

if options.silent
  system("cmp --silent #{tempfile_a} #{tempfile_b}")
else
  system("diff -c #{tempfile_a} #{tempfile_b} | sed '1,3d'")
end
exit_code = $?.exitstatus

system("rm -f #{tempfile_a} #{tempfile_b}")

exit(exit_code)
